# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
project_name: zincsearch
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    # - go generate ./...
nightly:
  # Allows you to change the version of the generated nightly release.
  #
  # Note that some pipes require this to be semantic version compliant (nfpm, for example).
  #
  # Default is `{{ incpatch .Version }}-{{ .ShortCommit }}-dev`.
  name_template: "{{ incpatch .Version }}-{{ .ShortCommit }}-dev"
builds:
  - 
    id: zincsearch_binaries
    ldflags:
    - -s -w 
    - -X github.com/zincsearch/zincsearch/pkg/meta.Version={{.Version}} # https://goreleaser.com/customization/templates/
    - "-X github.com/zincsearch/zincsearch/pkg/meta.BuildDate={{.Date}}"
    - "-X github.com/zincsearch/zincsearch/pkg/meta.CommitHash={{.Commit}}"
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
      - freebsd
      - openbsd
    goarch:
      - amd64
      - arm
      - arm64
    goarm:
      - "6"
      - "7"
    main: ./cmd/zincsearch/main.go
archives:
  - id: zincsearch
    name_template: >-
      {{- .ProjectName }}_
      {{- .Version }}_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end -}}
checksum:
  name_template: "checksums.txt"
snapshot:
  name_template: "{{ incpatch .Version }}-dev"
changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
dockers:
  - image_templates:
      - public.ecr.aws/zinclabs/zincsearch-dev:{{ .Version }}-amd64
    use: buildx
    dockerfile: Dockerfile.ci
    skip_push: "false"
    build_flag_templates:
    - "--build-arg=VERSION={{.Version}}"
    - "--build-arg=COMMIT_HASH={{.FullCommit}}"
    - "--build-arg=BUILD_DATE={{.Date}}"
    - "--platform=linux/amd64"
    extra_files:
      - go.mod
      - go.sum
      - cmd
      - docs
      - pkg
      - test
      - web
      - embed.go
  - image_templates:
      - public.ecr.aws/zinclabs/zincsearch-dev:{{ .Version }}-arm64
    use: buildx
    dockerfile: Dockerfile.ci
    skip_push: "false"
    build_flag_templates:
    - "--build-arg=VERSION={{.Version}}"
    - "--build-arg=COMMIT_HASH={{.FullCommit}}"
    - "--build-arg=BUILD_DATE={{.Date}}"
    - "--platform=linux/arm64/v8"
    extra_files:
      - go.mod
      - go.sum
      - cmd
      - docs
      - pkg
      - test
      - web
      - embed.go
  - image_templates:
      - public.ecr.aws/zinclabs/zincsearch-dev:{{ .Version }}-armv7 
    use: buildx
    dockerfile: Dockerfile.ci
    skip_push: "false"
    build_flag_templates:
    - "--build-arg=VERSION={{.Version}}"
    - "--build-arg=COMMIT_HASH={{.FullCommit}}"
    - "--build-arg=BUILD_DATE={{.Date}}"
    - "--platform=linux/arm/v7"
    extra_files:
      - go.mod
      - go.sum
      - cmd
      - docs
      - pkg
      - test
      - web
      - embed.go
docker_manifests:
- id: zincsearch_docker

  # Name template for the manifest.
  # Defaults to empty.
  name_template: public.ecr.aws/zinclabs/zincsearch-dev:{{ .Version }}

  # Image name templates to be added to this manifest.
  # Defaults to empty.
  image_templates:
  - public.ecr.aws/zinclabs/zincsearch-dev:{{ .Version }}-amd64
  - public.ecr.aws/zinclabs/zincsearch-dev:{{ .Version }}-arm64
  - public.ecr.aws/zinclabs/zincsearch-dev:{{ .Version }}-armv7

# https://goreleaser.com/customization/homebrew/
brews:
  - name: zincsearch
    tap:
      owner: zinclabs
      name: homebrew-tap-nightly
      # token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    folder: Formula
    homepage: "https://github.com/zincsearch/zincsearch"
    description: |
      ZincSearch is a search engine that does full text indexing. It is a lightweight
      alternative to elasticsearch that requires significantly less resources. It uses
      bluge as the underlying indexing library.

      It is very simple and easy to operate as opposed to elasticsearch which
      requires a couple dozen knobs to understand and tune.

      It is a drop-in replacement for elasticsearch if you are just ingesting
      data using APIs and searching using kibana (Kibana is not supported with
      ZincSearch. ZincSearch provides its own UI).
    license: "Apache-2.0"
blobs:
  - provider: s3
    region: us-west-2
    bucket: zincsearch-releases
    ids:
      - zincsearch_binaries
    folder: "dev/{{.Version}}-{{.Date}}"
    extra_files:
      - glob: ./dist/*.tar.gz
      - glob: ./dist/CHANGELOG.md
# snapcrafts:
#   - id: zincsearch-snap
#     name: zincsearch-snap
#     summary: ZincSearch engine. A lightweight alternative to elasticsearch.
#     description: |
#       ZincSearch is a search engine that does full text indexing. It is a lightweight
#       alternative to elasticsearch that requires significantly less resources. It uses
#       bluge as the underlying indexing library.

#       It is very simple and easy to operate as opposed to elasticsearch which
#       requires a couple dozen knobs to understand and tune.

#       It is a drop-in replacement for elasticsearch if you are just ingesting
#       data using APIs and searching using kibana (Kibana is not supported with
#       ZincSearch. ZincSearch provides its own UI).

#     license: Apache-2.0
#     grade: stable
#     confinement: classic
#     base: core18

#     replacements:
#         - id: zincsearch
#           name_template: >-
#             {{- .ProjectName }}_
#             {{- .Os }}_
#             {{- if eq .Arch "amd64" }}x86_64
#             {{- else if eq .Arch "386" }}i386
#             {{- else }}{{ .Arch }}{{ end }}
#             {{- if .Arm }}v{{ .Arm }}{{ end -}}

    # Whether to publish the snap to the snapcraft store.
    # Remember you need to `snapcraft login` first.
    # Defaults to false.
    # publish: true
